```name: Deploy workflow for obsrv one click

# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: Cluster Environment
#         default: dev
#         required: true
#       branch:
#         description: Public repo branch
#         default: actions
#         required: true
on:
  push:
    branches:
    - obsrv-oneclick-monitoring
    # - workflow
jobs:
  deployment:
    # if: github.actor == 'SadanandGowda' || github.actor ==  'AbhiGaddi' || github.actor == 'shiva-rakshith'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v2

    - name: AWS Credentials
      env: obsrv-dev
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Run terraform script
      run: |
        cd ../../
        cd terrform/aws
        terraform init -backend-config=terraform_backend.conf
        terraform plan
        terraform apply

    # - name: Checkout public repo hcx-devops 
    #   uses: actions/checkout@v3
    #   with:
    #     repository: SadanandGowda/hcx-devops
    #     ref: ${{ github.event.inputs.branch }}
    #     submodules: recursive
    #     path: hcx-devops


    # - name: Pull image tag from S3 bucket
    #   run: |
    #     aws s3 cp s3://build-tags/tag.txt /tmp/tag.txt
    #     cat /tmp/tag.txt

    # - name: Set an environment variable from a file
    #   # run: env MY_VARIABLE="$(cat /tmp/tag.txt)"
    #   run: echo "IMAGE_TAG=$(cat /tmp/tag.txt)" >> $GITHUB_ENV

    # - name: Print the environment variable
    #   run: echo ${{ env.IMAGE_TAG }}

    # - name: 'Deploy'
    #   uses: bitovi/github-actions-deploy-eks-helm@v1.1.0
    #   # uses: vimeda/helm@v1.6.8
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     # cluster-role-arn: arn:aws:iam::131795456882:user/hcx
    #     aws-region: ap-south-1
    #     # aws-profile: git-deploy
    #     cluster-name: ${{ github.event.inputs.environment }}-cluster
    #     name: 'api-gateway'
    #     namespace: '${{ github.event.inputs.environment }}'
    #     # release: api-gateway
    #     chart-path: 'hcx-devops/application/helm/core/api-gateway/'
    #     config-files: 'hcx-devops/application/helm/core/api-gateway/values.yaml, hcx/ansible/inventory/${{ github.event.inputs.environment }}/group_vars/${{ github.event.inputs.environment }}.yaml' #, https://github.com/Swasth-Digital-Health-Foundation/DevOps/blob/workflow/hcx/ansible/inventory/dev/group_vars/dev.yaml'
    #    # token: '${{ github.token }}'
    #     values: |
    #       common.image.tag=${{ env.IMAGE_TAG }}

```